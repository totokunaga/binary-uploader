services:
  mysql:
    image: mysql:8.0
    container_name: fs-store-mysql
    restart: always
    env_file: 
      - ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "${HOST_MYSQL_PORT}:${DB_PORT}"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${DB_USER}", "-p${DB_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - fs-network

  migrator:
    build:
      context: ./migration
      dockerfile: Dockerfile
    container_name: fs-store-migrate
    env_file: 
      - ./.env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    volumes:
      - ./db/migrations:/app/db/migrations
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - fs-network

  file-store:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: fs-store-server
    restart: always
    env_file: 
      - ./.env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - BASE_STORAGE_DIR=${BASE_STORAGE_DIR}
    ports:
      - "${HOST_FILE_SERVER_PORT}:${PORT}"
    volumes:
      - file-store-storage:/app/storage
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:${PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      migrator:
        condition: service_completed_successfully
      mysql:
        condition: service_healthy
    networks:
      - fs-network

volumes:
  mysql-data:
  file-store-storage:

networks:
  fs-network:
    driver: bridge 